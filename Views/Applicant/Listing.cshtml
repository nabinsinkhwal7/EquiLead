@model IEnumerable<EquidCMS.Models.Applicant>

@{
    ViewData["Title"] = "Listing";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>

    .dt-search {
        float: right;
    }

    .dt-paging {
        float: right;
        margin-top: 10px;
    }

    div.dt-buttons {
        position: relative;
        float: left;
    }

    button.dt-button, div.dt-button, a.dt-button {
        position: relative;
        display: inline-block;
        box-sizing: border-box;
        margin-right: 0.333em;
        padding: 0.5em 1em;
        border: 1px solid #999;
        border-radius: 2px;
        cursor: pointer;
        font-size: 0.88em;
        color: black;
        white-space: nowrap;
        overflow: hidden;
        background-color: #e9e9e9;
        background-image: -webkit-linear-gradient(top, #fff 0%, #e9e9e9 100%);
        background-image: -moz-linear-gradient(top, #fff 0%, #e9e9e9 100%);
        background-image: -ms-linear-gradient(top, #fff 0%, #e9e9e9 100%);
        background-image: -o-linear-gradient(top, #fff 0%, #e9e9e9 100%);
        background-image: linear-gradient(to bottom, #fff 0%, #e9e9e9 100%);
        filter: progid:DXImageTransform.Microsoft.gradient(GradientType=0,StartColorStr='white', EndColorStr='#e9e9e9');
        -webkit-user-select: none;
        -moz-user-select: none;
        -ms-user-select: none;
        user-select: none;
        text-decoration: none;
        outline: none;
    }
</style>

<section  class="mt-4 mb-4">
    <div class="row" style="border-bottom: black 2px solid; margin-bottom:5px">
        <div class="col-xl-4 col-lg-12 col-md-12 col-sm-12 col-xs-12">
            <h2 class="PagemainHeading">Applicant List </h2>
            <p style="color: blue;font-weight: bold;">Total Count : @ViewBag.TotalRecords</p>
        </div>
        <div class="col-xl-8 col-lg-8 col-md-12 col-sm-12 col-xs-12">
            <div class="pull-right">
                <a asp-action="Register" asp-controller="Applicant" class="btn btn-primary signup-gradient mb-1 float-end" data-wow-delay="600ms">Add Applicant</a>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-xl-2 col-lg-8 col-md-12 col-sm-12 col-xs-12">
            <button id="exportBtn" class="btn btn-primary btn-sm">Export Applicants</button>
        </div>
    </div>
    <div class="row">
        <div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-xs-12" style="overflow: auto;">
            <table id="myDataTable" class="table table-bordered table-striped dt-responsive nowrap w-100">
                <thead>
                    <tr>
                        <th></th>
                        <th></th>
                        <th>S.No.</th>
                        <th>
                            @Html.DisplayNameFor(model => model.FullName)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Email)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.CountryCode)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.PhoneNumber)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.LinkedinProfile)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Location)
                        </th>

                    </tr>
                </thead>
                <tbody>
                    @{
                        int a = 1;
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td>
                                    <a asp-action="InnerAllicantIndex" asp-route-id="@item.ApplicantId"><i class="fa-solid fa-eye"></i></a>
                                </td>
                                <td>
                                    <button class="btn btn-danger btn-sm delete-button" data-id="@item.ApplicantId">
                                        Delete
                                    </button>
                                </td>
                                <td>
                                    @a
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.FullName)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Email)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.CountryCode)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.PhoneNumber)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.LinkedinProfile)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Location)
                                </td>


                            </tr>
                            a += 1;
                        }
                    }
                </tbody>
            </table>
        </div>
    </div>
    <div class="text-center mt-4">
        @if (ViewBag.TotalPages > 1)
        {
            // Previous Button
            @if (ViewBag.CurrentPage > 1)
            {
                <a class="btn btn-outline-primary btn-sm m-1"
                   asp-action="Listing"
                   asp-route-page="@(ViewBag.CurrentPage - 1)"
                   asp-route-pageSize="@ViewBag.PageSize">Previous</a>
            }

            // Calculate the page range to display (let's say 2 pages before and 2 after)
            var startPage = Math.Max(1, ViewBag.CurrentPage - 2);
            var endPage = Math.Min(ViewBag.TotalPages, ViewBag.CurrentPage + 2);

            // Page Numbers
            for (int i = startPage; i <= endPage; i++)
            {
                if (i == ViewBag.CurrentPage)
                {
                    <span class="btn btn-primary btn-sm m-1">@i</span>
                }
                else
                {
                    <a class="btn btn-outline-primary btn-sm m-1"
                       asp-action="Listing"
                       asp-route-page="@i"
                       asp-route-pageSize="@ViewBag.PageSize">@i</a>
                }
            }

            // Next Button
            @if (ViewBag.CurrentPage < ViewBag.TotalPages)
            {
                <a class="btn btn-outline-primary btn-sm m-1"
                   asp-action="Listing"
                   asp-route-page="@(ViewBag.CurrentPage + 1)"
                   asp-route-pageSize="@ViewBag.PageSize">Next</a>
            }
        }
    </div>


</section>

<script>
    $(document).ready(function () {
        $(".delete-button").click(function () {
            var entryId = $(this).data("id");

            if (confirm("Are you sure you want to delete this record?")) {
                $.ajax({
                    url: "/Applicant/DeleteApplicant/" + entryId,
                    type: "POST",
                    success: function (response) {
                        alert("Record deleted successfully.");
                        location.reload(); // Refresh the page after deletion
                    },
                    error: function () {
                        alert("Error deleting record.");
                    }
                });
            }
        });




         document.getElementById("exportBtn").addEventListener("click", function () {
            fetch("/Applicant/ExportApplicants", {
                method: "post"
            })
            .then(response => {
                if (!response.ok) throw new Error("Network response was not ok.");
                return response.blob();
            })
            .then(blob => {
                const url = window.URL.createObjectURL(blob);
                const a = document.createElement("a");
                a.href = url;
                a.download = "Applicants.csv";
                document.body.appendChild(a);
                a.click();
                a.remove();
                window.URL.revokeObjectURL(url);
            })
            .catch(error => {
                alert("Export failed: " + error.message);
            });
        });

    });


</script>